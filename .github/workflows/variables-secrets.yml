name: Exploring variables and Secrets

on:
  push
jobs:

#  docker:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Docker Build
#        run: docker build -t docker.io/dockerUsername/imageName:latest
#
#      - name: Docker Login
#        run: docker login --username=vadlamudirajesh --password=lkkdj@SsoWd
#
#      - name: Docker Publish
#        run: docker push docker.io/vadlamudirajesh/imageName:latest
#
#  deploy:
#    needs: docker
#    runs-on: ubuntu-latest
#    steps:
#      - name: Docker Run
#        run: docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest


#############environment variables at STEP level ########################

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Docker Build
        env:
          CONTAINER_REGISTRY: docker.io
          DOCKER_USERNAME:   vadlamudirajesh
          IMAGE_NAME: github-actions-nginx
        run: docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/IMAGE_NAME:latest

      - name: Docker Login
        env:
          DOCKER_USERNAME:  vadlamudirajesh
          DOCKER_PASSWORD: Nandini@9701
        run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

      - name: Docker Publish
        env:
          DOCKER_REGISTRY:  docker.io
          DOCKER_USERNAME:  vadlamudirajesh
          IMAGE_NAME: github-actions-nginx
        run: echo docker push ${{env.DOCKER_REGISTRY}}/${{env.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Docker Run
        env:
          CONTAINER_REGISTRY: docker.io
          DOCKER_USERNAME:  vadlamudirajesh
          IMAGE_NAME: github-action-nginx
        run: docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest


####################### environment variables at Job level ###############################
#
#  docker:
#    env:
#      CONTAINER_REGISTRY: docker.io
#      DOCKER_USERNAME: vadlamudirajesh
#      IMAGE_NAME: github-actions-nginx
#    runs-on: ubuntu-latest
#    steps:
#      - name: Docker Build
#        run: docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/IMAGE_NAME:latest
#
#      - name: Docker Login
#        env:
#          DOCKER_USERNAME: vadlamudirajesh
#          DOCKER_PASSWORD: Nandini@9701
#        run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD
#
#      - name: Docker Publish
#        env:
#          DOCKER_REGISTRY:  docker.io
#          DOCKER_USERNAME: vadlamudirajesh
#          IMAGE_NAME: github-actions-nginx
#        run: echo docker push ${{env.DOCKER_REGISTRY}}/${{env.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:latest
#
#  deploy:
#    env:
#      CONTAINER_REGISTRY: docker.io
#      DOCKER_USERNAME: vadlamudirajesh
#      IMAGE_NAME: github-action-nginx
#    needs: docker
#    runs-on: ubuntu-latest
#    steps:
#      - name: Docker Run
#        run: docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest


######################environment variables at workflow level########################

#name: Exploring variables and Secrets
#on:
#  push
#jobs:
#
#  docker:
#    env:
#      CONTAINER_REGISTRY: docker.io
#      DOCKER_USERNAME: vadlamudirajesh
#      IMAGE_NAME: github-actions-nginx
#    runs-on: ubuntu-latest
#    steps:
#      - name: Docker Build
#        run: docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/IMAGE_NAME:latest
#
#      - name: Docker Login
#        env:
#          DOCKER_USERNAME: vadlamudirajesh
#          DOCKER_PASSWORD: Nandini@9701
#        run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD
#
#      - name: Docker Publish
#        env:
#          DOCKER_REGISTRY:  docker.io
#          DOCKER_USERNAME: vadlamudirajesh
#          IMAGE_NAME: github-actions-nginx
#        run: echo docker push ${{env.DOCKER_REGISTRY}}/${{env.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:latest
#
#  deploy:
#    env:
#      CONTAINER_REGISTRY: docker.io
#      DOCKER_USERNAME: vadlamudirajesh
#      IMAGE_NAME: github-action-nginx
#    needs: docker
#    runs-on: ubuntu-latest
#    steps:
#      - name: Docker Run
#        run: docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest